package com.edu.search;

import java.io.IOException;
import java.util.ArrayList;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import java.lang.Integer;
import java.lang.Double;


@WebServlet("")
public class Search extends HttpServlet {
	private static final long serialVersionUID = 1L;

	public Search() {
		super();
	}
	
	protected void doGet(HttpServletRequest request,
			HttpServletResponse response) throws ServletException, IOException {
		System.out.println("Testing - doGet...");
		request.getRequestDispatcher("/WEB-INF/SearchUI.jsp").forward(request, response);
	}
	
	
	protected void doPost(HttpServletRequest request,
			HttpServletResponse response) throws ServletException, IOException {
		
    
	String button = null;
    
    switch(button) {
    //query database for an ArrayList
    case "search": 
    		
		try {
			int pID   = -1;
    		double pL = -1;
    		double pH = -1;
    		String name = "";
    		int qL = -1;
    		int qH = -1;
    		String notes = "";
    		
    		
    		
    //if statements to determine if the items exist, and ensure they are not empty
    //
    		
    		
    		if ( request.getParameter("pID") != null && !request.getParameter("pID").isEmpty()) {
    			pID = Integer.parseInt(request.getParameter("pID"));
    		}
    			
    		if ( request.getParameter("pL") != null && !request.getParameter("pL").isEmpty()) {
    			pL = Double.parseDouble(request.getParameter("pL"));
    		}
    		
    		if ( request.getParameter("pH") != null && !request.getParameter("pH").isEmpty()) {
    			pH = Double.parseDouble(request.getParameter("pH"));
    			
    		}
    		
    		if ( request.getParameter("name") != null && !name.isEmpty()) {
    			name = request.getParameter("name");
    			
    		}
    		
    		if ( request.getParameter("qL") != null && !"qL".isEmpty()) {
    			qL = Integer.parseInt(request.getParameter("qL"));
    		}
    		
    		if ( request.getParameter("qH") != null && !"qH".isEmpty()) {
    			qH = Integer.parseInt(request.getParameter("qH"));
    		}
    		
    		if ( request.getParameter("notes") !=null && !notes.isEmpty()) {
    			notes = request.getParameter("notes");
    		}
    		
    	
    		ArrayList<Object> products = PDB.pDBQuery(pID, name, pL, pH, qL,
    		qH, notes);
    
    		HttpSession session = request.getSession();
    		session.setAttribute("products", products);
    		
		
		} catch (NumberFormatException e) {
			e.printStackTrace();
		}
    		
    }
   }
}
